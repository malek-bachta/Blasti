// Generated by view binder compiler. Do not edit!
package tn.mbach.warnMe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tn.mbach.warnMe.R;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView MyName;

  @NonNull
  public final TextView Myemail;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final CardView cardprofile;

  @NonNull
  public final ImageView imageprofile;

  @NonNull
  public final TextView profile;

  @NonNull
  public final ImageView profileimg;

  @NonNull
  public final TextView updateProfile;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView, @NonNull TextView MyName,
      @NonNull TextView Myemail, @NonNull Button btnLogout, @NonNull CardView cardprofile,
      @NonNull ImageView imageprofile, @NonNull TextView profile, @NonNull ImageView profileimg,
      @NonNull TextView updateProfile) {
    this.rootView = rootView;
    this.MyName = MyName;
    this.Myemail = Myemail;
    this.btnLogout = btnLogout;
    this.cardprofile = cardprofile;
    this.imageprofile = imageprofile;
    this.profile = profile;
    this.profileimg = profileimg;
    this.updateProfile = updateProfile;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.MyName;
      TextView MyName = ViewBindings.findChildViewById(rootView, id);
      if (MyName == null) {
        break missingId;
      }

      id = R.id.Myemail;
      TextView Myemail = ViewBindings.findChildViewById(rootView, id);
      if (Myemail == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.cardprofile;
      CardView cardprofile = ViewBindings.findChildViewById(rootView, id);
      if (cardprofile == null) {
        break missingId;
      }

      id = R.id.imageprofile;
      ImageView imageprofile = ViewBindings.findChildViewById(rootView, id);
      if (imageprofile == null) {
        break missingId;
      }

      id = R.id.profile;
      TextView profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.profileimg;
      ImageView profileimg = ViewBindings.findChildViewById(rootView, id);
      if (profileimg == null) {
        break missingId;
      }

      id = R.id.updateProfile;
      TextView updateProfile = ViewBindings.findChildViewById(rootView, id);
      if (updateProfile == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, MyName, Myemail, btnLogout,
          cardprofile, imageprofile, profile, profileimg, updateProfile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
